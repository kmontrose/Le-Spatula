//#includes for playing audio from sd
#include "SD.h"
#define SD_ChipSelectPin 4
#include "TMRpcm.h"
#include "SPI.h"

//(All pins that i "assigned" are all placeholders/subject to change) - will

int fsrAnalogPin = 0;
int count = 0;
int redLED = 2;
const int maxtime = 60000;

//set pins for accelerometer
const int xInput = A0;
const int yInput = A1;
const int zInput = A2;

//set pin to read button press
int handleSw = A3;

//variable for use with playing audio from speaker
TMRpcm tmrpcm;

void setup() {

  //setup for playing audio clips
  tmrpcm.speakerPin = 9;
  Serial.begin(9600);
  if (!SD.begin(SD_ChipSelectPin)) {
  Serial.println("SD fail");
  return;
  
}

void loop() {
//wait for game to turn on


//start the game
if(ONbutton==1){

    int mistake = 0; //create a way for loop to end if a mistake is made

    while(mistake == 0){

       int task = random(1, 3);
       
       //Press it
       if(task==1){   
          
          //call press it function
          int check = pressIt();
          
          if(check == 1){
              count++;
          }
          elseif(check == 0){
              mistake = 1;
          }
       }
       
       //Flip it
       elseif (task==2){
           //call flip it function
          int check = flipIt();
          
          if(check == 1){
              count++;
          }
          elseif(check == 0){
              mistake = 1;
          }
       }
       
       //Firmly grasp it
       elseif (task==3){
          //call firmly grasp it function
          int check = firmlyGraspIt();
          
          if(check == 1){
              count++;
          }
          elseif(check == 0){
              mistake = 1;
          }
       }
       
       //decrement time to perform tasks
       maxtime = maxtime - 100;
    }  
  }
}

//press it function  (returns 1 for success and 0 for failure)
pressIt(int success){
       success = 1;
       //play audio clip saying press it
       tmrpcm.setVolume(6);
       tmrpcm.play("pressit.wav");
       
       //Begin countdown
       long int tstart = millis();
       
       long int tend = millis();
       long int time = tend - tstart;
   
       while(time < maxtime){  //wait for fsr value to change
          while(int fsrReading == 0){
              fsrReading = analogRead(fsrAnalogPin);
       
       }  
       
       
       
       if(time > maxtime){  //if they took too long
          //Turn red LED on
          digitalWrite(redLED, HIGH);
          success == 0;
          return success;
       }
       else{
          digitalWrite(greenLED, HIGH);
          return success;
       }
  }

//flip it function (returns 1 for success and 0 for failure)
flipIt(int success){
    success = 1;
    //play audio clip saying flip it
    tmrpcm.setVolume(6);
    tmrpcm.play("flipit.wav");
    
    //Begin countdown
    long int tstart = millis();
    
    long int tend = millis();
    long int time = tend - tstart;
    
    while(time < maxtime){
        //read accelerometer to detect jerking motion
        long reading1 = 0;
        long reading2 = 0;
        long reading3 = 0;
    
	      analogRead(xInput);
        analogRead(yInput);
        analogRead(zInput);
    
	      delay(1);
	      for (int i = 0; i < 10; i++){
	          reading1 += analogRead(xInput);
            reading2 += analogRead(yInput);
            reading3 += analogRead(zInput);
	      }
        
	      int xRaw = reading1/sampleSize;
        int yRaw = reading2/sampleSize;
        int zRaw = reading3/sampleSize;
   
        int avg = (xRaw + yRaw + zRaw)/3;
   
        tend = millis();
        time = tend - tstart;
    
        if(avg > 1000 && time < maxtime){
            digitalWrite(greenLED, HIGH);
            return success;
        }
        elseif(time > maxtime){
            digitalWrite(redLED, HIGH);
            success = 0;
            return success;
        }  
   }

//firmly grasp it function (returns 1 for success and 0 for failure)
firmlyGraspIt(int success){
    success = 1;
    //play audio clip saying firmly grasp it
    tmrpcm.setVolume(6);
    tmrpcm.play("firmlygraspit.wav");

    //Begin countdown
    long int tstart = millis();

    long int tend = millis();
    long int time = tend - tstart;

    while(time < maxtime){
        //read state of button
        int buttonState;
        buttonState = digitalRead(buttonPin);
        
        tend = millis();
        time = tend - tstart
        
        if(buttonState == HIGH && time < maxtime){
            digitalWrite(greenLED, HIGH);
            return success;
        }
        elseif(time > maxtime){
            digitalWrite(redLED, HIGH);
            success = 0;
            return success;
        }
    }
}

    

///////////////////////////////////////
//psuedo code
Spatula-It pseudo-code
Main(){
   While(power == 1){
  Read input until game start is signaled;
  While(game start == true){
    Randomize a number 1-3 and assign it to a variable;
    If variable == 1{
    call press it function
}
Otherwise, if variable == 2{
call flip it function
}
Otherwise{
call grip it function
}
If action successful: light green LED and add 1 to total score
If action unsuccessful: light red LED and read out total score.
}
}
Press it function(){
Play audio clip saying “press it” from speaker
If spatula is held in burger press orientation for more than 1.5 sec, return true
If action is not completed return false
}
Flip it function(){
Play audio clip saying “flip it” from speaker
If accelerometer detects “jerking motion”, return true
If action is not completed return false
}
Grip it function(){
Play audio clip saying “grip it” from speaker
If the spatulas handle button is pressed, return true
If action is not completed return false
}
